@use '../utils' as *;

input,
select,
textarea {
	accent-color: $c_se_dark;
	cursor: pointer;
	background-color: transparent;
	border: none;
	width: 100%;
	text-transform: capitalize;
	-moz-appearance: none;
	appearance: none;
	font: inherit;

	&:focus {
		border: none;
		outline: none;
	}

	&::-webkit-outer-spin-button,
	&::-webkit-inner-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}
}

input[type='checkbox'] {
	background-color: $c_bg_default;
	border-radius: 0.25rem;
	overflow: hidden;

	@include pseudo(0) {
		left: 38%;
		top: 48%;
		width: 5px;
		height: 8px;
		border: solid white;
		border-width: 0 2px 2px 0;
		transform: rotate(35deg) translate(-50%, -50%) scale(0);
		transition: transform 0.3s 0.15s ease;
	}

	@include pseudo(0, 100%, -1, before) {
		background-color: $c_se_dark;
		transform: scale(0);
		border-radius: 50%;
		transition: transform 0.3s;
	}

	&:checked {
		&::after {
			transform: rotate(35deg) translate(-50%, -50%) scale(1.5);
		}

		&::before {
			transform: scale(2);
		}
	}
}

.input {
	&-wrapper {
		@include d_flex(column);
		border: $b_1;
		border-radius: 100vmax;
		position: relative;
		width: 100%;
		margin-block-end: $s_4;
		transition: border-color 0.2s ease;

		input,
		select {
			padding: $s_4 $s_6;

			@include mq('md') {
				padding: $s_2 $s_4;
			}
			@include fs('body');
		}

		select:focus + .input-action {
			transform: translateY(-50%) rotate(180deg);
		}

		&:has(input:focus),
		&:has(input:focus-visible),
		&:has(select:focus),
		&:has(select:focus-visible) {
			border-color: $c_p_dark;
		}

		&-checkbox {
			@include d_flex(row, flex-start, center, nowrap, false, $s_2);

			input {
				border: 1px solid $c_n_400;
			}
		}

		&:user-invalid {
			border-color: $c_e_dark;
		}
	}

	&-label {
		position: absolute;
		top: 0;
		left: $s_4;
		transform: translateY(calc(-1 * $s_3 - 4px));
		background: $c_bg_default;
		padding-inline: $s_2;
		text-transform: capitalize;
		border-radius: 100vmax;
		color: $c_p_main;
	}

	&-action {
		position: absolute;
		right: $s_4;
		top: 50%;
		transform: translateY(-50%);
		color: $c_se_dark;
		transition: transform 0.3s ease;
		pointer-events: none;

		&:has(sup) {
			transform: translateY(-60%);
		}
	}

	&-group {
		&-wrapper {
			@include d_flex($gap: $s_4);
			text-transform: capitalize;

			label {
				@include d_flex(row, center, center, $gap: $s_1);

				input {
					appearance: unset;
					background-color: #fff;
					width: $s_5;
					height: $s_5;
					border-radius: 50%;
					border: $b_2;

					@include pseudo(0, $s_3) {
						top: 50%;
						left: 50%;
						border-radius: 50%;
						box-shadow: inset 1em 1em $c_se_dark;
						transform: translate(-50%, -50%) scale(0);
						transition: 120ms transform ease-in-out;
					}

					&:checked {
						border-color: $c_se_dark;
						&::after {
							transform: translate(-50%, -50%) scale(1);
						}
					}
				}
			}
		}

		&-label {
			color: $c_p_main;
		}
	}

	&-medium {
		width: 1.5rem;
		height: 1.5rem;
	}
}

#filtersForm .input-group {
	padding-inline-start: 1.5rem;
	margin-block-end: 1rem;
}

select.city-select-2 {
	display: none;
}

.input-label {
	z-index: 100;
}
